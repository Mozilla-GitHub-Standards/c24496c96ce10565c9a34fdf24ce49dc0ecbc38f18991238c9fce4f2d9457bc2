#!/usr/bin/env python
# This implements something like virtualenv-style activation whenever
# you use the script:
import sys, os
base = os.path.dirname(os.path.realpath(os.path.dirname(os.path.abspath(__file__))))
# Only do this if we're not in a virtualenv already
if not getattr(sys, 'real_prefix', None):
    prev_sys_path = list(sys.path)
    import site
    site.addsitedir(base)
    new_sys_path = []
    for item in list(sys.path):
        if item not in prev_sys_path:
            new_sys_path.append(item)
            sys.path.remove(item)
    # Put our entries first
    sys.path[:0] = new_sys_path
# EASY-INSTALL-ENTRY-SCRIPT: (fakely)

def render(data):
    from mako.template import Template
    from mako.lookup import TemplateLookup

    lookup = TemplateLookup(["."])
    return Template(data, lookup=lookup).render()

def main(argv=None):
    from os.path import isfile
    from sys import stdin

    if argv is None:
        import sys
        argv = sys.argv

    from optparse import OptionParser

    parser = OptionParser("usage: %prog [FILENAME]")

    opts, args = parser.parse_args(argv[1:])
    if len(args) not in (0, 1):
        parser.error("wrong number of arguments") # Will exit

    if (len(args) == 0) or (args[0] == "-"):
        fo = stdin
    else:
        filename = args[0]
        if not isfile(filename):
            raise SystemExit("error: can't find %s" % filename)
        fo = open(filename)

    data = fo.read()
    print render(data)

if __name__ == "__main__":
    main()
